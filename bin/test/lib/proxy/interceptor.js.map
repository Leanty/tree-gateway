{"version":3,"sources":["proxy/interceptor.js","../../src/lib/proxy/interceptor.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","typescript_ioc_1","require","settings_1","path","Utils","pathToRegexp","ProxyInterceptor","prototype","requestInterceptor","proxy","hasRequestInterceptor","buildRequestInterceptor","responseInterceptor","hasResponseInterceptor","buildResponseInterceptor","_this","func","Array","push","interceptor","request","forEach","index","p","join","settings","middlewarePath","name","appliesTo","normalizePath","f","eval","response","Inject","Settings","AutoWired","exports"],"mappings":"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","file":"interceptor.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar typescript_ioc_1 = require(\"typescript-ioc\");\nvar settings_1 = require(\"../settings\");\nvar path = require(\"path\");\nvar Utils = require(\"./utils\");\nvar pathToRegexp = require('path-to-regexp');\nvar ProxyInterceptor = (function () {\n    function ProxyInterceptor() {\n    }\n    ProxyInterceptor.prototype.requestInterceptor = function (proxy) {\n        if (this.hasRequestInterceptor(proxy)) {\n            return (this.buildRequestInterceptor(proxy));\n        }\n        return null;\n    };\n    ProxyInterceptor.prototype.responseInterceptor = function (proxy) {\n        if (this.hasResponseInterceptor(proxy)) {\n            return (this.buildResponseInterceptor(proxy));\n        }\n        return null;\n    };\n    ProxyInterceptor.prototype.buildRequestInterceptor = function (proxy) {\n        var _this = this;\n        var func = new Array();\n        func.push(\"function(proxyReq, originalReq){\");\n        proxy.interceptor.request.forEach(function (interceptor, index) {\n            var p = path.join(_this.settings.middlewarePath, 'interceptor', 'request', interceptor.name);\n            if (interceptor.appliesTo) {\n                func.push(\"if (\");\n                interceptor.appliesTo.forEach(function (path, index) {\n                    if (index > 0) {\n                        func.push(\"||\");\n                    }\n                    func.push(\"(pathToRegexp('\" + Utils.normalizePath(path) + \"').test(originalReq.path))\");\n                });\n                func.push(\")\");\n            }\n            func.push(\"proxyReq = require('\" + p + \"')(proxyReq, originalReq);\");\n        });\n        func.push(\"return proxyReq;\");\n        func.push(\"}\");\n        var f;\n        eval('f = ' + func.join(''));\n        return f;\n    };\n    ProxyInterceptor.prototype.buildResponseInterceptor = function (proxy) {\n        var _this = this;\n        var func = new Array();\n        func.push(\"function(rsp, data, req, res, callback){\");\n        func.push(\"var continueChain = function(rsp, data, req, res, calback){ callback(null, data);};\");\n        proxy.interceptor.response.forEach(function (interceptor, index) {\n            if (interceptor.appliesTo) {\n                func.push(\"var f\" + index + \";\");\n                func.push(\"if (\");\n                interceptor.appliesTo.forEach(function (path, index) {\n                    if (index > 0) {\n                        func.push(\"&&\");\n                    }\n                    func.push(\"!(pathToRegexp('\" + Utils.normalizePath(path) + \"').test(req.path))\");\n                });\n                func.push(\")\");\n                func.push(\"f\" + index + \" = continueChain;\");\n                func.push(\"else f\" + index + \" = \");\n            }\n            else {\n                func.push(\"var f\" + index + \" = \");\n            }\n            var p = path.join(_this.settings.middlewarePath, 'interceptor', 'response', interceptor.name);\n            func.push(\"require('\" + p + \"');\");\n            func.push(\"f\" + index + \"(rsp, data, req, res, (error, value)=>{ \\\n                if (error) { \\\n                   callback(error); \\\n                   return; \\\n                } \\\n                data = value;\");\n        });\n        proxy.interceptor.response.forEach(function (interceptor, index) {\n            if (index == 0) {\n                func.push(\"callback(null, data);\");\n            }\n            func.push(\"});\");\n        });\n        func.push(\"}\");\n        var f;\n        eval('f = ' + func.join(''));\n        return f;\n    };\n    ProxyInterceptor.prototype.hasRequestInterceptor = function (proxy) {\n        return (proxy.interceptor && proxy.interceptor.request && proxy.interceptor.request.length > 0);\n    };\n    ProxyInterceptor.prototype.hasResponseInterceptor = function (proxy) {\n        return (proxy.interceptor && proxy.interceptor.response && proxy.interceptor.response.length > 0);\n    };\n    __decorate([\n        typescript_ioc_1.Inject, \n        __metadata('design:type', settings_1.Settings)\n    ], ProxyInterceptor.prototype, \"settings\", void 0);\n    ProxyInterceptor = __decorate([\n        typescript_ioc_1.AutoWired, \n        __metadata('design:paramtypes', [])\n    ], ProxyInterceptor);\n    return ProxyInterceptor;\n}());\nexports.ProxyInterceptor = ProxyInterceptor;\n","\"use strict\";\n\nimport * as StringUtils from \"underscore.string\";\nimport * as config from \"../config\";\nimport {AutoWired, Inject} from \"typescript-ioc\";\nimport {Settings} from \"../settings\";\nimport * as path from \"path\"; \nimport * as Utils from \"./utils\";\n\nlet pathToRegexp = require('path-to-regexp');\n\n@AutoWired\nexport class ProxyInterceptor {\n    @Inject\n    private settings: Settings;\n    \n    requestInterceptor(proxy: config.Proxy) {\n        if (this.hasRequestInterceptor(proxy)) {\n          return (this.buildRequestInterceptor(proxy));\n        }\n        return null;\n    }\n\n    responseInterceptor(proxy: config.Proxy) {\n        if (this.hasResponseInterceptor(proxy)) {\n          return (this.buildResponseInterceptor(proxy));\n        }\n        return null;\n    }\n\n    private buildRequestInterceptor(proxy: config.Proxy) {\n        let func = new Array<string>();\n        func.push(\"function(proxyReq, originalReq){\");\n        proxy.interceptor.request.forEach((interceptor, index)=>{\n            let p = path.join(this.settings.middlewarePath, 'interceptor', 'request' ,interceptor.name);                \n            if (interceptor.appliesTo) {\n                func.push(\"if (\");                \n                interceptor.appliesTo.forEach((path,index)=>{\n                    if (index > 0) {\n                        func.push(\"||\");                \n                    }                \n                    func.push(\"(pathToRegexp('\"+Utils.normalizePath(path)+\"').test(originalReq.path))\");\n\n                });\n                func.push(\")\");                \n            }\n            func.push(\"proxyReq = require('\"+p+\"')(proxyReq, originalReq);\");\n        });\n        func.push(\"return proxyReq;\");\n        func.push(\"}\");\n        let f;\n        eval('f = '+func.join(''))\n        return f;\n    }\n\n    private buildResponseInterceptor(proxy: config.Proxy) {\n        let func = new Array<string>();\n        func.push(\"function(rsp, data, req, res, callback){\");\n        func.push(\"var continueChain = function(rsp, data, req, res, calback){ callback(null, data);};\");\n        proxy.interceptor.response.forEach((interceptor, index)=>{\n            if (interceptor.appliesTo) {\n                func.push(\"var f\"+index+\";\");        \n                func.push(\"if (\");                \n                interceptor.appliesTo.forEach((path,index)=>{\n                    if (index > 0) {\n                        func.push(\"&&\");                \n                    }                \n                    func.push(\"!(pathToRegexp('\"+Utils.normalizePath(path)+\"').test(req.path))\");\n\n                });\n                func.push(\")\");                \n                func.push(\"f\"+index+\" = continueChain;\");        \n                func.push(\"else f\"+index+\" = \");        \n            }\n            else {\n                func.push(\"var f\"+index+\" = \");        \n            }\n            let p = path.join(this.settings.middlewarePath, 'interceptor', 'response' ,interceptor.name);                \n            func.push(\"require('\"+p+\"');\");\n            func.push(\"f\"+index+\"(rsp, data, req, res, (error, value)=>{ \\\n                if (error) { \\\n                   callback(error); \\\n                   return; \\\n                } \\\n                data = value;\"\n            );\n        });\n        proxy.interceptor.response.forEach((interceptor, index)=>{\n            if (index == 0) {\n                func.push(\"callback(null, data);\");\n            }\n            func.push(\"});\");\n        });\n        func.push(\"}\");\n        let f;\n        eval('f = '+func.join(''));\n        return f;\n    }\n\n    private hasRequestInterceptor(proxy: config.Proxy) {\n        return (proxy.interceptor && proxy.interceptor.request && proxy.interceptor.request.length > 0);\n    }\n\n    private hasResponseInterceptor(proxy: config.Proxy) {\n        return (proxy.interceptor && proxy.interceptor.response && proxy.interceptor.response.length > 0);\n    }\n}  "]}