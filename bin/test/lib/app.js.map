{"version":3,"sources":["../../src/lib/app.ts"],"names":["logger","require","gateway_1","fs","winston","typescript_ioc_1","add","transports","File","filename","__dirname","gateway","Container","get","Gateway","app","server","accessLogStream","createWriteStream","flags","use","skip","req","res","statusCode","stream","initialize","listen","module","exports"],"mappings":";;;;;;;;;AAGA,IAAYA,MAAA,GAAMC,OAAA,CAAM,QAAN,CAAlB,C;;AACA,IAAAC,SAAA,GAAAD,OAAA,CAAsB,WAAtB,CAAA,C;;AACA,IAAYE,EAAA,GAAEF,OAAA,CAAM,UAAN,CAAd,C;;AACA,IAAYG,OAAA,GAAOH,OAAA,CAAM,SAAN,CAAnB,C;;AACA,IAAAI,gBAAA,GAAAJ,OAAA,CAAwB,gBAAxB,CAAA,C;;AAEAG,OAAA,CAAQE,GAAR,CAAYF,OAAA,CAAQG,UAAR,CAAmBC,IAA/B,EAAqC,EAAEC,QAAA,EAAUC,SAAA,GAAY,mBAAxB,EAArC,E;;AACA,IAAIC,OAAA,GAAmBN,gBAAA,CAAAO,SAAA,CAAUC,GAAV,CAAcX,SAAA,CAAAY,OAAd,CAAvB,C;;AACA,IAAIC,GAAA,GAAMJ,OAAA,CAAQK,MAAlB,C;;AAEA,IAAID,GAAA,CAAIF,GAAJ,CAAQ,KAAR,KAAkB,YAAtB,EAAoC;AAAA,I,yCAAA;AAAA,I,uCAAA;AAAA,IAClC,IAAMI,eAAA,GAAkBd,EAAA,CAAGe,iBAAH,CAAqBR,SAAA,GAAY,yBAAjC,EAA2D,EAACS,KAAA,EAAO,GAAR,EAA3D,CAAxB,CADkC;AAAA,I,uCAAA;AAAA,IAElCJ,GAAA,CAAIK,GAAJ,CAAQpB,MAAA,CAAO,QAAP,EAAiB;AAAA,QACvBqB,IAAA,EAAM,UAASC,GAAT,EAA+BC,GAA/B,EAAoD;AAAA,Y,sCAAA;AAAA,Y,uCAAA;AAAA,YACtD,OAAOA,GAAA,CAAIC,UAAJ,GAAiB,GAAxB,CADsD;AAAA,SADnC;AAAA,QAIvBC,MAAA,EAAQR,eAJe;AAAA,KAAjB,CAAR,EAFkC;AAAA,CAApC,MAQK;AAAA,I,yCAAA;AAAA,I,uCAAA;AAAA,IACHF,GAAA,CAAIK,GAAJ,CAAQpB,MAAA,CAAO,KAAP,CAAR,EADG;AAAA,C;;AAILW,OAAA,CAAQe,UAAR,G;;AACAX,GAAA,CAAIY,MAAJ,CAAW,IAAX,E;;AACAC,MAAA,CAAOC,OAAP,GAAiBd,GAAjB","file":"app.js","sourcesContent":["\"use strict\";\n\nimport * as express from \"express\";\nimport * as logger from \"morgan\";\nimport {Gateway} from \"./gateway\";\nimport * as fs from \"fs-extra\";\nimport * as winston from \"winston\";\nimport {Container} from \"typescript-ioc\";\n\nwinston.add(winston.transports.File, { filename: __dirname + '/logs/gateway.log' });\nlet gateway: Gateway = Container.get(Gateway);\nlet app = gateway.server;\n\nif (app.get('env') == 'production') {\n  const accessLogStream = fs.createWriteStream(__dirname + '/logs/access_errors.log',{flags: 'a'});\n  app.use(logger('common', {\n    skip: function(req: express.Request, res: express.Response) { \n        return res.statusCode < 400 \n    }, \n    stream: accessLogStream }));\n} \nelse {\n  app.use(logger('dev'));\n}\n\ngateway.initialize();\napp.listen(3010);\nmodule.exports = app;\n\n"]}