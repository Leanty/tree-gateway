{"version":3,"sources":["../../src/lib/config/api.ts"],"names":["authentication_1","require","throttling_1","proxy_1","serviceDiscovery_1","Joi","exports","ApiConfigValidatorSchema","object","keys","name","string","alphanum","min","max","required","version","regex","proxy","ProxyValidatorSchema","description","throttling","ThrottlingConfigValidatorSchema","authentication","AuthenticationValidatorSchema","serviceDiscovery","ServiceDiscoveryConfigValidatorSchema","validateApiConfig","apiConfig","callback","validate"],"mappings":";;;;;;;;;AAEA,IAAAA,gBAAA,GAAAC,OAAA,CAAkE,kBAAlE,CAAA,C;;AACA,IAAAC,YAAA,GAAAD,OAAA,CAAgE,cAAhE,CAAA,C;;AACA,IAAAE,OAAA,GAAAF,OAAA,CAA0C,SAA1C,CAAA,C;;AACA,IAAAG,kBAAA,GAAAH,OAAA,CAA4E,oBAA5E,CAAA,C;;AACA,IAAYI,GAAA,GAAGJ,OAAA,CAAM,KAAN,CAAf,C;;AAmCWK,OAAA,CAAAC,wBAAA,GAA2BF,GAAA,CAAIG,MAAJ,GAAaC,IAAb,CAAkB;AAAA,IACpDC,IAAA,EAAML,GAAA,CAAIM,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,EAAnC,EAAuCC,QAAvC,EAD8C;AAAA,IAEpDC,OAAA,EAASX,GAAA,CAAIM,MAAJ,GAAaM,KAAb,CAAmB,yBAAnB,EAA8CF,QAA9C,EAF2C;AAAA,IAGpDG,KAAA,EAAOf,OAAA,CAAAgB,oBAAA,CAAqBJ,QAArB,EAH6C;AAAA,IAIpDK,WAAA,EAAaf,GAAA,CAAIM,MAAJ,EAJuC;AAAA,IAKpDU,UAAA,EAAYnB,YAAA,CAAAoB,+BALwC;AAAA,IAMpDC,cAAA,EAAgBvB,gBAAA,CAAAwB,6BANoC;AAAA,IAOpDC,gBAAA,EAAkBrB,kBAAA,CAAAsB,qCAPkC;AAAA,CAAlB,CAA3B,C;AAUX,SAAAC,iBAAA,CAAkCC,SAAlC,EAAwDC,QAAxD,EAAoF;AAAA,I,sCAAA;AAAA,I,sCAAA;AAAA,IAChFxB,GAAA,CAAIyB,QAAJ,CAAaF,SAAb,EAAwBtB,OAAA,CAAAC,wBAAxB,EAAkDsB,QAAlD,EADgF;AAAA,C;;AAApEvB,OAAA,CAAAqB,iBAAA,GAAiBA,iBAAjB","file":"api.js","sourcesContent":["\"use strict\";\n\nimport {AuthenticationConfig, AuthenticationValidatorSchema} from \"./authentication\";\nimport {ThrottlingConfig, ThrottlingConfigValidatorSchema} from \"./throttling\";\nimport {Proxy, ProxyValidatorSchema} from \"./proxy\";\nimport {ServiceDiscoveryConfig, ServiceDiscoveryConfigValidatorSchema} from \"./serviceDiscovery\";\nimport * as Joi from \"joi\";\n\n/**\n * The API config descriptor.\n */\nexport interface ApiConfig {\n    /**\n     * The API name. Used to identify the API on admin console. \n     */\n    name: string;\n    /**\n     * The API version. More than one version can be published for the same API.\n     */\n    version: string;\n    /**\n     * Configuration for the API proxy engine.\n     */\n    proxy: Proxy;\n    /**\n     * An optional description for API. \n     */\n    description?: string;\n    /**\n     * Configuration for the rate limit engine.\n     */\n    throttling?: ThrottlingConfig;\n\n    /**\n     * Configuration for API authentication.\n     */\n    authentication?: AuthenticationConfig;\n\n    serviceDiscovery?: ServiceDiscoveryConfig;\n}\n\nexport let ApiConfigValidatorSchema = Joi.object().keys({\n    name: Joi.string().alphanum().min(3).max(30).required(),\n    version: Joi.string().regex(/^(\\d+\\.)?(\\d+\\.)?(\\d+)$/).required(),\n    proxy: ProxyValidatorSchema.required(),\n    description: Joi.string(),\n    throttling: ThrottlingConfigValidatorSchema,\n    authentication: AuthenticationValidatorSchema, \n    serviceDiscovery: ServiceDiscoveryConfigValidatorSchema\n});\n\nexport function validateApiConfig(apiConfig: ApiConfig, callback: (err, value)=>void) {\n    Joi.validate(apiConfig, ApiConfigValidatorSchema, callback);\n}"]}