{"version":3,"sources":["../../src/lib/command-line.ts"],"names":["path","require","StringUtils","args","parameters","option","__dirname","parse","process","argv","Parameters","exports","rootDir","dir","port","adminPort","startsWith","join","cwd"],"mappings":";;;;;;;;;AAEA,IAAYA,IAAA,GAAIC,OAAA,CAAM,MAAN,CAAhB,C;;AACA,IAAYC,WAAA,GAAWD,OAAA,CAAM,mBAAN,CAAvB,C;;AAEA,IAAIE,IAAA,GAAOF,OAAA,CAAQ,MAAR,CAAX,C;;AAEA,IAAIG,UAAA,GAAaD,IAAA,CACdE,MADc,CACP,KADO,EACA,2DADA,EAC6DC,SAD7D,EAEdD,MAFc,CAEP,MAFO,EAEC,0BAFD,EAE6B,IAF7B,EAGdA,MAHc,CAGP,WAHO,EAGM,uCAHN,EAG+C,IAH/C,EAIdE,KAJc,CAIRC,OAAA,CAAQC,IAJA,CAAjB,C;;AAMA,IAAAC,UAAA,GAAA,YAAA;AAAA,I,sCAAA;AAAA,IAAA,SAAAA,UAAA,GAAA;AAAA,Q,sCAAA;AAAA,KAAA;AAAA,I,sCAAA;AAAA,IAIA,OAAAA,UAAA,CAJA;AAAA,CAAA,EAAA,C;;AAAaC,OAAA,CAAAD,UAAA,GAAUA,UAAV,C;;AAMbA,UAAA,CAAWE,OAAX,GAAqBR,UAAA,CAAWS,GAAhC,C;;AACAH,UAAA,CAAWI,IAAX,GAAkBV,UAAA,CAAWU,IAA7B,C;;AACAJ,UAAA,CAAWK,SAAX,GAAuBX,UAAA,CAAWW,SAAlC,C;;AAEA,IAAIb,WAAA,CAAYc,UAAZ,CAAuBN,UAAA,CAAWE,OAAlC,EAA2C,GAA3C,CAAJ,EAAqD;AAAA,I,yCAAA;AAAA,I,uCAAA;AAAA,IACnDF,UAAA,CAAWE,OAAX,GAAqBZ,IAAA,CAAKiB,IAAL,CAAUT,OAAA,CAAQU,GAAR,EAAV,EAAyBR,UAAA,CAAWE,OAApC,CAArB,CADmD;AAAA,CAArD,M","file":"command-line.js","sourcesContent":["\"use strict\";\n\nimport * as path from \"path\";\nimport * as StringUtils from \"underscore.string\";\n\nlet args = require(\"args\");\n\nlet parameters = args\n  .option('dir', 'The root directory where apis and middlewares are placed.', __dirname)\n  .option('port', 'The gateway listen port.', 8000)\n  .option('adminPort', 'The gateway admin server listen port.', 8001)\n  .parse(process.argv);\n\nexport class Parameters {\n    static rootDir: string;\n    static port: number;\n    static adminPort: number;\n}\n\nParameters.rootDir = parameters.dir;\nParameters.port = parameters.port;\nParameters.adminPort = parameters.adminPort;\n\nif (StringUtils.startsWith(Parameters.rootDir, '.')) {\n  Parameters.rootDir = path.join(process.cwd(), Parameters.rootDir);                \n}\n\n"]}