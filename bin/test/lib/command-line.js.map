{"version":3,"sources":["../../src/lib/command-line.ts"],"names":["express","require","winston","settings_1","path","StringUtils","typescript_ioc_1","args","parameters","option","__dirname","parse","process","argv","Parameters","exports","rootDir","dir","port","adminPort","startsWith","join","cwd","provider","get","settings","Settings","app","apiPath","middlewarePath","Container","bind","add","transports","File","filename"],"mappings":";;;;;;;;;AAEA,IAAYA,OAAA,GAAOC,OAAA,CAAM,SAAN,CAAnB,C;;AACA,IAAYC,OAAA,GAAOD,OAAA,CAAM,SAAN,CAAnB,C;;AACA,IAAAE,UAAA,GAAAF,OAAA,CAAuB,iBAAvB,CAAA,C;;AACA,IAAYG,IAAA,GAAIH,OAAA,CAAM,MAAN,CAAhB,C;;AACA,IAAYI,WAAA,GAAWJ,OAAA,CAAM,mBAAN,CAAvB,C;;AACA,IAAAK,gBAAA,GAAAL,OAAA,CAAkC,gBAAlC,CAAA,C;;AAEA,IAAIM,IAAA,GAAON,OAAA,CAAQ,MAAR,CAAX,C;;AAEA,IAAIO,UAAA,GAAaD,IAAA,CACdE,MADc,CACP,KADO,EACA,2DADA,EAC6DC,SAD7D,EAEdD,MAFc,CAEP,MAFO,EAEC,0BAFD,EAE6B,IAF7B,EAGdA,MAHc,CAGP,WAHO,EAGM,uCAHN,EAG+C,IAH/C,EAIdE,KAJc,CAIRC,OAAA,CAAQC,IAJA,CAAjB,C;;AAMA,IAAAC,UAAA,GAAA,YAAA;AAAA,I,sCAAA;AAAA,IAAA,SAAAA,UAAA,GAAA;AAAA,Q,sCAAA;AAAA,KAAA;AAAA,I,uCAAA;AAAA,IAIA,OAAAA,UAAA,CAJA;AAAA,CAAA,EAAA,C;;AAAaC,OAAA,CAAAD,UAAA,GAAUA,UAAV,C;;AAMbA,UAAA,CAAWE,OAAX,GAAqBR,UAAA,CAAWS,GAAhC,C;;AACAH,UAAA,CAAWI,IAAX,GAAkBV,UAAA,CAAWU,IAA7B,C;;AACAJ,UAAA,CAAWK,SAAX,GAAuBX,UAAA,CAAWW,SAAlC,C;;AAEA,IAAId,WAAA,CAAYe,UAAZ,CAAuBN,UAAA,CAAWE,OAAlC,EAA2C,GAA3C,CAAJ,EAAqD;AAAA,I,yCAAA;AAAA,I,uCAAA;AAAA,IACnDF,UAAA,CAAWE,OAAX,GAAqBZ,IAAA,CAAKiB,IAAL,CAAUT,OAAA,CAAQU,GAAR,EAAV,EAAyBR,UAAA,CAAWE,OAApC,CAArB,CADmD;AAAA,CAArD,M;;;;AAGA,IAAMO,QAAA,GAAqB;AAAA,IACzBC,GAAA,EAAK,YAAA;AAAA,Q,sCAAA;AAAA,Q,uCAAA;AAAA,QACH,IAAMC,QAAA,GAAqB,IAAItB,UAAA,CAAAuB,QAAJ,EAA3B,CADG;AAAA,Q,uCAAA;AAAA,QAEHD,QAAA,CAASE,GAAT,GAAe3B,OAAA,EAAf,CAFG;AAAA,Q,uCAAA;AAAA,QAGHyB,QAAA,CAASG,OAAT,GAAmBxB,IAAA,CAAKiB,IAAL,CAAUP,UAAA,CAAWE,OAArB,EAA8B,MAA9B,CAAnB,CAHG;AAAA,Q,uCAAA;AAAA,QAIHS,QAAA,CAASI,cAAT,GAA0BzB,IAAA,CAAKiB,IAAL,CAAUP,UAAA,CAAWE,OAArB,EAA8B,YAA9B,CAA1B,CAJG;AAAA,Q,uCAAA;AAAA,QAKD,OAAOS,QAAP,CALC;AAAA,KADoB;AAAA,CAA3B,C;;AAUAnB,gBAAA,CAAAwB,SAAA,CAAUC,IAAV,CAAe5B,UAAA,CAAAuB,QAAf,EAAyBH,QAAzB,CAAkCA,QAAlC,E;;AACArB,OAAA,CAAQ8B,GAAR,CAAY9B,OAAA,CAAQ+B,UAAR,CAAmBC,IAA/B,EAAqC,EAAEC,QAAA,EAAU/B,IAAA,CAAKiB,IAAL,CAAUP,UAAA,CAAWE,OAArB,EAA8B,kBAA9B,CAAZ,EAArC","file":"command-line.js","sourcesContent":["\"use strict\";\n\nimport * as express from \"express\";\nimport * as winston from \"winston\";\nimport {Settings} from \"../lib/settings\";\nimport * as path from \"path\";\nimport * as StringUtils from \"underscore.string\";\nimport {Container, Provider} from \"typescript-ioc\";\n\nlet args = require(\"args\");\n\nlet parameters = args\n  .option('dir', 'The root directory where apis and middlewares are placed.', __dirname)\n  .option('port', 'The gateway listen port.', 8000)\n  .option('adminPort', 'The gateway admin server listen port.', 8001)\n  .parse(process.argv);\n\nexport class Parameters {\n    static rootDir: string;\n    static port: number;\n    static adminPort: number;\n}\n\nParameters.rootDir = parameters.dir;\nParameters.port = parameters.port;\nParameters.adminPort = parameters.adminPort;\n\nif (StringUtils.startsWith(Parameters.rootDir, '.')) {\n  Parameters.rootDir = path.join(process.cwd(), Parameters.rootDir);                \n}\nconst provider: Provider = { \n  get: () => {\n    const settings: Settings = new Settings();\n    settings.app = express();\n    settings.apiPath = path.join(Parameters.rootDir, 'apis');\n    settings.middlewarePath = path.join(Parameters.rootDir ,'middleware');\n      return settings; \n  }\n};\n\nContainer.bind(Settings).provider(provider);\nwinston.add(winston.transports.File, { filename: path.join(Parameters.rootDir, 'logs/gateway.log') });\n"]}