{"version":3,"sources":["../../src/lib/throttling.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;AAIb,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AACpC,+BAAgC,gBAAgB,CAAC,CAAA;AACjD,yBAAuB,YAAY,CAAC,CAAA;AAGpC;IAAA;IAsBA,CAAC;IAlBG,iCAAU,GAAV,UAAW,IAAY,EAAE,UAA6B;QAClD,IAAI,SAAS,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC9C,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACjD,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC;YAC/B,IAAI,UAAU,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;YAE7C,UAAU,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC;gBAI9B,MAAM,EAAE,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAE,CAAC;aAC1C,CAAC,CAAC;QACP,CAAC;QAED,IAAI,OAAO,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,CAAC;QAExC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IApBD;QAAC,uBAAM;;kDAAA;IAFX;QAAC,0BAAS;;oBAAA;IAuBV,mBAAC;AAAD,CAtBA,AAsBC,IAAA;AAtBY,oBAAY,eAsBxB,CAAA","file":"throttling.js","sourcesContent":["\"use strict\";\n\nimport * as express from \"express\";\nimport * as config from \"./config\";\nimport * as Utils from \"underscore\";\nimport {AutoWired, Inject} from \"typescript-ioc\";\nimport {Settings} from \"./settings\";\n\n@AutoWired\nexport class ApiRateLimit {\n    @Inject\n    private settings: Settings;\n\n    throttling(path: string, throttling: config.Throttling) {\n        let RateLimit = require('express-rate-limit');\n        let rateConfig = Utils.omit(throttling, \"store\");\n        if (throttling.store === 'redis') {\n            let RedisStore = require('rate-limit-redis');\n\n            rateConfig.store = new RedisStore({\n// expiry: seconds - how long each rate limiting window exists for. Defaults to 60.\n// prefix: string - prefix to add to entries in Redis. Defaults to rl:.\n// client: Redis Client - A node_redis Redis Client to use. Defaults to require('redis').createClient();.\n                expiry: (throttling.windowMs / 1000) +1\n            });\n        }\n        \n        let limiter = new RateLimit(rateConfig);        \n\n        this.settings.app.use(path, limiter);\n    }\n}\n"]}