{"version":3,"sources":["../../src/lib/authentication/auth.ts"],"names":["Utils","require","pathUtil","auth","providedStrategies","ApiAuth","gateway","prototype","authentication","apiKey","path","_this","keys","forEach","key","authConfig","has","strategy","p","join","middlewarePath","server","use","authenticate","session","logger","isDebugEnabled","debug","e","error","exports"],"mappings":"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","file":"auth.js","sourcesContent":["\"use strict\";\n\nimport {AuthenticationConfig} from \"../config/authentication\";\nimport * as Utils from \"underscore\";\nimport * as pathUtil from \"path\"; \nimport * as auth from \"passport\"; \nimport {Gateway} from \"../gateway\";\n\nconst providedStrategies = {\n    'jwt': require('./strategies/jwt'),\n    'basic': require('./strategies/basic'),\n    'local': require('./strategies/local')\n} \n\nexport class ApiAuth {\n    private gateway: Gateway;\n\n    constructor(gateway: Gateway) {\n        this.gateway = gateway;\n    }\n\n    authentication(apiKey: string, path: string, authentication: AuthenticationConfig) {\n        Utils.keys(authentication).forEach(key=>{\n            try {\n                let authConfig = authentication[key];\n                if (Utils.has(providedStrategies, key)) {\n                    let strategy = providedStrategies[key];\n                    strategy(apiKey, authConfig, this.gateway);\n                }\n                else {\n                    let p = pathUtil.join(this.gateway.middlewarePath, 'authentication', 'strategies' , key);                \n                    let strategy = require(p);\n                    strategy(apiKey, authConfig);\n                }\n                this.gateway.server.use(path, auth.authenticate(apiKey, { session: false }));\n                if (this.gateway.logger.isDebugEnabled) {\n                    this.gateway.logger.debug(\"Authentication Strategy [%s] configured for path [%s]\", key, path);\n                }\n            }\n            catch(e) {\n                this.gateway.logger.error(\"Error configuring Authentication Strategy [%s] for path [%s]\", key, path, e);\n            }\n        });\n    }\n}\n"]}