{"version":3,"sources":["../../src/lib/proxy.ts"],"names":[],"mappings":"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","file":"proxy.js","sourcesContent":["\"use strict\";\n\nimport * as express from \"express\";\nimport * as StringUtils from \"underscore.string\";\nimport * as config from \"./config\";\nimport {AutoWired, Inject} from \"typescript-ioc\";\nimport {Settings} from \"./settings\";\nimport * as pathToRegexp from \"path-to-regexp\";\n\nlet proxy = require(\"express-http-proxy\");\n\n/**\n * The API Proxy system. It uses [[express-http-proxy]](https://github.com/villadora/express-http-proxy)\n * to proxy requests to a target API.\n */\n@AutoWired\nexport class ApiProxy {\n    @Inject\n    private settings: Settings;\n\n    /**\n     * Configure a proxy for a given API\n     */\n    proxy(api: config.Api, ) {\n        this.settings.app.use(api.proxy.path, proxy(api.proxy.target.path, this.configureProxy(api.proxy)));\n    }\n    \n    private configureProxy(proxy: config.Proxy) {\n        let result = {\n            forwardPath: function(req: express.Request, res: express.Response) {\n                return StringUtils.splice(req.originalUrl, 0, proxy.path.length);\n            }\n        };\n        if (proxy.preserveHostHdr) {\n            result['preserveHostHdr']  = proxy.preserveHostHdr; \n        }\n        if (proxy.timeout) {\n            result['timeout']  = proxy.timeout; \n        }\n        if (proxy.https) {\n            result['https']  = proxy.https; \n        }\n        let filterChain: Array<Function> = this.buildFilters(proxy);\n        if (filterChain && filterChain.length > 0) {            \n            result['filter'] = function(req, res) {\n                let result = true;\n                filterChain.forEach(f=>{\n                    if (result) {\n                        result = f(req, res);\n                    } \n                });\n                return result;\n            }; \n        }\n        return result;\n    }\n\n    private buildFilters(proxy: config.Proxy) {\n        let filterChain = new Array<Function>();\n        if (this.hasMethodFilter(proxy)) {\n            filterChain.push(this.buildMethodFilter(proxy));\n        }\n        if (this.hasPathFilter(proxy)) {\n//            filterChain.push(this.buildPathFilter(proxy));\n        }\n        return filterChain;\n    }\n\n    private buildMethodFilter(proxy: config.Proxy) {\n        let body = new Array<string>();\n        body.push(\"var accepted = true;\");\n        if (proxy.target.allowMethod && proxy.target.allowMethod.length > 0) {\n            body.push(\"accepted = (\");\n            proxy.target.allowMethod.forEach((method, index)=>{\n                if (index > 0)\n                {\n                    body.push(\"||\");                \n                }\n                body.push(\"(req.method === '\"+StringUtils.capitalize(method)+\"')\")\n            });\n            body.push(\");\");\n        }\n        if (proxy.target.denyMethod && proxy.target.denyMethod.length > 0) {\n            body.push(\"accepted = (\");\n            proxy.target.denyMethod.forEach((method, index)=>{\n                if (index > 0)\n                {\n                    body.push(\"&&\");                \n                }\n                body.push(\"(req.method !== '\"+StringUtils.capitalize(method)+\"')\")\n            });\n            body.push(\");\");\n        }\n        body.push(\"if (!accepted){ res.status(405);}\");\n        body.push(\"return accepted;\");\n        return Function(\"req\", \"res\", body.join(''));\n    }\n\n    private hasCustomFilter(proxy: config.Proxy) {\n        return (proxy.filter && proxy.filter.length > 0);\n    }\n\n    private hasPathFilter(proxy: config.Proxy) {\n        return (proxy.target.allowPath && proxy.target.allowPath.length > 0)\n            || (proxy.target.denyPath && proxy.target.denyPath.length > 0);\n    }\n\n    private hasMethodFilter(proxy: config.Proxy) {\n        return (proxy.target.allowMethod && proxy.target.allowMethod.length > 0)\n            || (proxy.target.denyMethod && proxy.target.denyMethod.length > 0);\n    }   \n}"]}