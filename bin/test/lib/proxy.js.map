{"version":3,"sources":["../../src/lib/proxy.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;AAGb,IAAY,WAAW,WAAM,mBAAmB,CAAC,CAAA;AAEjD,+BAAgC,gBAAgB,CAAC,CAAA;AACjD,yBAAuB,YAAY,CAAC,CAAA;AAEpC,IAAI,KAAK,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAO1C;IAAA;IAuCA,CAAC;IAhCG,wBAAK,GAAL,UAAM,GAAe;QACjB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxG,CAAC;IAEO,iCAAc,GAAtB,UAAuB,KAAmB;QACtC,IAAI,MAAM,GAAG;YACT,WAAW,EAAE,UAAS,GAAoB,EAAE,GAAqB;gBAC7D,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrE,CAAC;SACJ,CAAC;QACF,EAAE,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,iBAAiB,CAAC,GAAI,KAAK,CAAC,eAAe,CAAC;QACvD,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,SAAS,CAAC,GAAI,KAAK,CAAC,OAAO,CAAC;QACvC,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,OAAO,CAAC,GAAI,KAAK,CAAC,KAAK,CAAC;QACnC,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACzC,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;YAC7D,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;YACjE,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YAC3D,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAClE,MAAM,CAAC,QAAQ,CAAC,GAAG,UAAS,GAAG,EAAE,GAAG;gBAChC,IAAI,MAAM,GAAG,IAAI,CAAC;gBAElB,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC,CAAC;QACN,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IArCD;QAAC,uBAAM;;8CAAA;IAFX;QAAC,0BAAS;;gBAAA;IAwCV,eAAC;AAAD,CAvCA,AAuCC,IAAA;AAvCY,gBAAQ,WAuCpB,CAAA","file":"proxy.js","sourcesContent":["\"use strict\";\n\nimport * as express from \"express\";\nimport * as StringUtils from \"underscore.string\";\nimport * as config from \"./config\";\nimport {AutoWired, Inject} from \"typescript-ioc\";\nimport {Settings} from \"./settings\";\n\nlet proxy = require(\"express-http-proxy\");\n\n/**\n * The API Proxy system. It uses [[express-http-proxy]](https://github.com/villadora/express-http-proxy)\n * to proxy requests to a target API.\n */\n@AutoWired\nexport class ApiProxy {\n    @Inject\n    private settings: Settings;\n\n    /**\n     * Configure a proxy for a given API\n     */\n    proxy(api: config.Api, ) {\n        this.settings.app.use(api.proxy.path, proxy(api.proxy.target.path, this.configureProxy(api.proxy)));\n    }\n    \n    private configureProxy(proxy: config.Proxy) {\n        let result = {\n            forwardPath: function(req: express.Request, res: express.Response) {\n                return StringUtils.splice(req.originalUrl, 0, proxy.path.length);\n            }\n        };\n        if (proxy.preserveHostHdr) {\n            result['preserveHostHdr']  = proxy.preserveHostHdr; \n        }\n        if (proxy.timeout) {\n            result['timeout']  = proxy.timeout; \n        }\n        if (proxy.https) {\n            result['https']  = proxy.https; \n        }\n        if ((proxy.filter && proxy.filter.length > 0) ||\n            (proxy.target.allowPath && proxy.target.allowPath.length > 0) ||\n            (proxy.target.allowMethod && proxy.target.allowMethod.length > 0) ||\n            (proxy.target.denyPath && proxy.target.denyPath.length > 0) ||\n            (proxy.target.denyMethod && proxy.target.denyMethod.length > 0)) {\n            result['filter'] = function(req, res) {\n                let result = true;\n\n                return true;\n            }; \n        }\n        return result;\n    }\n}"]}