{"version":3,"sources":["gateway.js","../../src/lib/gateway.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","__param","paramIndex","decorator","fs","require","StringUtils","proxy_1","Utils","throttling_1","es5_compat_1","settings_1","typescript_ioc_1","winston","Gateway","settings","prototype","get","app","enumerable","configurable","initialize","ready","_this","apis","StringMap","path","apiPath","readdir","err","files","error","endsWith","length_1","forEach","fileName","index","readJson","apiConfig","loadApi","api","info","name","proxy","apiKey","getApiKey","set","normalizePath","throttling","debug","apiRateLimit","apiProxy","version","Inject","ApiProxy","ApiRateLimit","AutoWired","Settings","exports"],"mappings":"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","file":"gateway.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar fs = require(\"fs-extra\");\nvar StringUtils = require(\"underscore.string\");\nvar proxy_1 = require(\"./proxy/proxy\");\nvar Utils = require(\"./proxy/utils\");\nvar throttling_1 = require(\"./throttling/throttling\");\nvar es5_compat_1 = require(\"./es5-compat\");\nvar settings_1 = require(\"./settings\");\nvar typescript_ioc_1 = require(\"typescript-ioc\");\nvar winston = require(\"winston\");\nvar Gateway = (function () {\n    function Gateway(settings) {\n        this.settings = settings;\n    }\n    Object.defineProperty(Gateway.prototype, \"server\", {\n        get: function () {\n            return this.settings.app;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Gateway.prototype.initialize = function (ready) {\n        var _this = this;\n        this.apis = new es5_compat_1.StringMap();\n        var path = this.settings.apiPath;\n        fs.readdir(path, function (err, files) {\n            if (err) {\n                winston.error(\"Error reading directory: \" + err);\n            }\n            else {\n                path = ((StringUtils.endsWith(path, '/')) ? path : path + '/');\n                var length_1 = files.length;\n                files.forEach(function (fileName, index) {\n                    if (StringUtils.endsWith(fileName, '.json')) {\n                        fs.readJson(path + fileName, function (error, apiConfig) {\n                            if (error) {\n                                winston.error(\"Error reading directory: \" + error);\n                            }\n                            else {\n                                _this.loadApi(apiConfig, (length_1 - 1 === index) ? ready : null);\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    };\n    Gateway.prototype.loadApi = function (api, ready) {\n        winston.info(\"Configuring API [\" + api.name + \"] on path: \" + api.proxy.path);\n        var apiKey = this.getApiKey(api);\n        this.apis.set(apiKey, api);\n        api.proxy.path = Utils.normalizePath(api.proxy.path);\n        if (api.throttling) {\n            winston.debug(\"Configuring API Rate Limits\");\n            this.apiRateLimit.throttling(api.proxy.path, api.throttling);\n        }\n        winston.debug(\"Configuring API Proxy\");\n        this.apiProxy.proxy(api);\n        if (ready) {\n            ready();\n        }\n    };\n    Gateway.prototype.getApiKey = function (api) {\n        return api.name + (api.version ? '_' + api.version : '_default');\n    };\n    __decorate([\n        typescript_ioc_1.Inject, \n        __metadata('design:type', proxy_1.ApiProxy)\n    ], Gateway.prototype, \"apiProxy\", void 0);\n    __decorate([\n        typescript_ioc_1.Inject, \n        __metadata('design:type', throttling_1.ApiRateLimit)\n    ], Gateway.prototype, \"apiRateLimit\", void 0);\n    Gateway = __decorate([\n        typescript_ioc_1.AutoWired,\n        __param(0, typescript_ioc_1.Inject), \n        __metadata('design:paramtypes', [settings_1.Settings])\n    ], Gateway);\n    return Gateway;\n}());\nexports.Gateway = Gateway;\n","\"use strict\";\n\nimport * as express from \"express\";\nimport * as fs from \"fs-extra\";\nimport * as StringUtils from \"underscore.string\";\nimport * as config from \"./config\";\nimport {ApiProxy} from \"./proxy/proxy\";\nimport * as Utils from \"./proxy/utils\";\nimport {ApiRateLimit} from \"./throttling/throttling\";\nimport {Set, StringMap} from \"./es5-compat\";\nimport {Settings} from \"./settings\";\nimport {AutoWired, Inject} from \"typescript-ioc\";\nimport * as winston from \"winston\";\n\n@AutoWired\nexport class Gateway {\n    @Inject\n    private apiProxy: ApiProxy;\n    @Inject\n    private apiRateLimit: ApiRateLimit;\n    private apis: StringMap<config.Api>;\n    private settings: Settings;\n\n    constructor(@Inject settings: Settings) {\n        this.settings = settings;\n    }    \n    \n    get server() : express.Application{\n        return this.settings.app;\n    }\n\n    initialize(ready?: () => void) {\n        this.apis = new StringMap<config.Api>();\n        let path = this.settings.apiPath;\n        fs.readdir(path, (err, files) => {\n            if (err) {\n                winston.error(\"Error reading directory: \"+err);\n            }\n            else {\n                path = ((StringUtils.endsWith(path, '/'))?path:path+'/');\n                const length = files.length;\n                files.forEach((fileName, index) =>{\n                    if (StringUtils.endsWith(fileName, '.json')) {\n                        fs.readJson(path+fileName, (error, apiConfig: config.Api)=>{\n                            if (error) {\n                                winston.error(\"Error reading directory: \"+error);\n                            }\n                            else {\n                                this.loadApi(apiConfig, (length -1 === index)?ready: null);\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    }\n\n    loadApi(api: config.Api, ready?: () => void) {\n        winston.info(\"Configuring API [\"+api.name+\"] on path: \"+api.proxy.path);\n        let apiKey: string = this.getApiKey(api);\n        this.apis.set(apiKey, api);\n        api.proxy.path = Utils.normalizePath(api.proxy.path);\n        \n        if (api.throttling) {\n            winston.debug(\"Configuring API Rate Limits\");\n            this.apiRateLimit.throttling(api.proxy.path, api.throttling);\n        }\n        winston.debug(\"Configuring API Proxy\");\n        this.apiProxy.proxy(api);\n        \n        if (ready) {\n            ready();\n        }\n    }\n\n    private getApiKey(api: config.Api) {\n        return api.name + (api.version? '_'+api.version: '_default');\n    }\n}"]}