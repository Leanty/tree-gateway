{"version":3,"sources":["../../src/lib/logger.ts","logger.js"],"names":["Winston","require","gateway_1","StringUtils","path","fs","defaults","Logger","config","gateway","winston","instantiateLogger","prototype","level","LogLevel","info","options","transports","console","push","Console","file","filename","startsWith","join","rootPath","ensureDirSync","dirname","File","isDebugEnabled","debug","isInfoEnabled","isErrorEnabled","error","args","_i","arguments","length","apply","exports"],"mappings":"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","file":"logger.js","sourcesContent":["\"use strict\";\n\nimport * as Winston from \"winston\";\nimport {LoggerConfig, LogLevel} from \"./config/gateway\";\nimport * as StringUtils from \"underscore.string\";\nimport * as path from \"path\";\nimport * as fs from \"fs-extra\";\nimport {Gateway} from \"./gateway\";\n\nlet defaults = require('defaults');\n\nexport class Logger {\n    level: LogLevel;\n    winston: Winston.LoggerInstance;\n    config: LoggerConfig;\n\n    constructor(config: LoggerConfig, gateway: Gateway) {\n        this.config = config;\n        this.winston = this.instantiateLogger(config, gateway);\n    }\n\n    private instantiateLogger(config: LoggerConfig, gateway: Gateway) {\n        this.level = (config? LogLevel[config.level] : LogLevel.info);\n        const options: Winston.LoggerOptions = {\n           level: LogLevel[this.level],\n           transports: [] \n        }\n        \n        if (config && config.console) {\n            options.transports.push(new Winston.transports.Console(config.console));\n        }\n        if (config && config.file) {\n            config.file = defaults(config.file, {\n                filename: './logs/gateway.log'\n            })\n            if (StringUtils.startsWith(config.file.filename, '.')) {\n                config.file.filename = path.join(gateway.config.rootPath, config.file.filename);\n                fs.ensureDirSync(path.dirname(config.file.filename));\n            }\n            options.transports.push(new Winston.transports.File(config.file));\n        }\n        \n        return new Winston.Logger(options);\n    }\n\n    isDebugEnabled (): boolean {\n        return this.level === LogLevel.debug;\n    }\n\n    isInfoEnabled (): boolean {\n        return this.level >= LogLevel.info;\n    }\n\n    isErrorEnabled (): boolean {\n        return this.level >= LogLevel.error;\n    }\n\n    debug(...args: any[]) {\n        this.winston.debug.apply(this, arguments);\n    }\n\n    info(...args: any[]) {\n        this.winston.info.apply(this, arguments);\n    }\n\n    error(...args: any[]) {\n        this.winston.error.apply(this, arguments);\n    }\n}\n","\"use strict\";\nvar Winston = require(\"winston\");\nvar gateway_1 = require(\"./config/gateway\");\nvar StringUtils = require(\"underscore.string\");\nvar path = require(\"path\");\nvar fs = require(\"fs-extra\");\nvar defaults = require('defaults');\nvar Logger = (function () {\n    function Logger(config, gateway) {\n        this.config = config;\n        this.winston = this.instantiateLogger(config, gateway);\n    }\n    Logger.prototype.instantiateLogger = function (config, gateway) {\n        this.level = (config ? gateway_1.LogLevel[config.level] : gateway_1.LogLevel.info);\n        var options = {\n            level: gateway_1.LogLevel[this.level],\n            transports: []\n        };\n        if (config && config.console) {\n            options.transports.push(new Winston.transports.Console(config.console));\n        }\n        if (config && config.file) {\n            config.file = defaults(config.file, {\n                filename: './logs/gateway.log'\n            });\n            if (StringUtils.startsWith(config.file.filename, '.')) {\n                config.file.filename = path.join(gateway.config.rootPath, config.file.filename);\n                fs.ensureDirSync(path.dirname(config.file.filename));\n            }\n            options.transports.push(new Winston.transports.File(config.file));\n        }\n        return new Winston.Logger(options);\n    };\n    Logger.prototype.isDebugEnabled = function () {\n        return this.level === gateway_1.LogLevel.debug;\n    };\n    Logger.prototype.isInfoEnabled = function () {\n        return this.level >= gateway_1.LogLevel.info;\n    };\n    Logger.prototype.isErrorEnabled = function () {\n        return this.level >= gateway_1.LogLevel.error;\n    };\n    Logger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        this.winston.debug.apply(this, arguments);\n    };\n    Logger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        this.winston.info.apply(this, arguments);\n    };\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        this.winston.error.apply(this, arguments);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\n"]}