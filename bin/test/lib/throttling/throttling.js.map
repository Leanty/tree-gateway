{"version":3,"sources":["throttling/throttling.js","../../src/lib/throttling/throttling.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","Utils","require","typescript_ioc_1","settings_1","pathUtil","ApiRateLimit","prototype","throttling","path","RateLimit","rateConfig","omit","store","RedisStore","expiry","windowMs","limiter","keyGenerator","p","join","settings","middlewarePath","handler","app","use","Inject","Settings","AutoWired","exports"],"mappings":"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","file":"throttling.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar Utils = require(\"underscore\");\nvar typescript_ioc_1 = require(\"typescript-ioc\");\nvar settings_1 = require(\"../settings\");\nvar pathUtil = require(\"path\");\nvar ApiRateLimit = (function () {\n    function ApiRateLimit() {\n    }\n    ApiRateLimit.prototype.throttling = function (path, throttling) {\n        var RateLimit = require('express-rate-limit');\n        var rateConfig = Utils.omit(throttling, \"store\", \"keyGenerator\", \"handler\");\n        if (throttling.store === 'redis') {\n            var RedisStore = require('rate-limit-redis');\n            rateConfig.store = new RedisStore({\n                expiry: (throttling.windowMs / 1000) + 1\n            });\n        }\n        var limiter = new RateLimit(rateConfig);\n        if (throttling.keyGenerator) {\n            var p = pathUtil.join(this.settings.middlewarePath, 'throttling', 'keyGenerator', throttling.keyGenerator);\n            rateConfig.keyGenerator = require(p);\n        }\n        if (throttling.handler) {\n            var p = pathUtil.join(this.settings.middlewarePath, 'throttling', 'handler', throttling.handler);\n            rateConfig.handler = require(p);\n        }\n        this.settings.app.use(path, limiter);\n    };\n    __decorate([\n        typescript_ioc_1.Inject, \n        __metadata('design:type', settings_1.Settings)\n    ], ApiRateLimit.prototype, \"settings\", void 0);\n    ApiRateLimit = __decorate([\n        typescript_ioc_1.AutoWired, \n        __metadata('design:paramtypes', [])\n    ], ApiRateLimit);\n    return ApiRateLimit;\n}());\nexports.ApiRateLimit = ApiRateLimit;\n","\"use strict\";\n\nimport * as express from \"express\";\nimport * as config from \"../config\";\nimport * as Utils from \"underscore\";\nimport {AutoWired, Inject} from \"typescript-ioc\";\nimport {Settings} from \"../settings\";\nimport * as pathUtil from \"path\"; \n\n@AutoWired\nexport class ApiRateLimit {\n    @Inject\n    private settings: Settings;\n\n    throttling(path: string, throttling: config.Throttling) {\n        let RateLimit = require('express-rate-limit');\n        let rateConfig = Utils.omit(throttling, \"store\", \"keyGenerator\", \"handler\");\n        if (throttling.store === 'redis') {\n            let RedisStore = require('rate-limit-redis');\n\n            rateConfig.store = new RedisStore({\n// expiry: seconds - how long each rate limiting window exists for. Defaults to 60.\n// prefix: string - prefix to add to entries in Redis. Defaults to rl:.\n// client: Redis Client - A node_redis Redis Client to use. Defaults to require('redis').createClient();.\n                expiry: (throttling.windowMs / 1000) +1\n            });\n        }\n        \n        let limiter = new RateLimit(rateConfig);        \n\n        if (throttling.keyGenerator) {\n            let p = pathUtil.join(this.settings.middlewarePath, 'throttling', 'keyGenerator' , throttling.keyGenerator);                \n            rateConfig.keyGenerator = require(p);\n        }\n        if (throttling.handler) {\n            let p = pathUtil.join(this.settings.middlewarePath, 'throttling', 'handler' , throttling.handler);                \n            rateConfig.handler = require(p);\n        }\n\n        this.settings.app.use(path, limiter);\n    }\n}\n"]}