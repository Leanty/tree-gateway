{"version":3,"sources":["../../src/lib/throttling/throttling.ts"],"names":["Utils","require","pathUtil","ApiRateLimit","gateway","prototype","throttling","path","RateLimit","rateConfig","omit","redisClient","store","logger","isDebugEnabled","debug","RedisStore","expiry","windowMs","client","limiter","keyGenerator","p","join","middlewarePath","handler","server","use","exports"],"mappings":"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","file":"throttling.js","sourcesContent":["\"use strict\";\n\nimport * as express from \"express\";\nimport {ThrottlingConfig} from \"../config/throttling\";\nimport * as Utils from \"underscore\";\nimport * as pathUtil from \"path\"; \nimport {Gateway} from \"../gateway\";\n\nexport class ApiRateLimit {\n    private gateway: Gateway;\n\n    constructor(gateway: Gateway) {\n        this.gateway = gateway;\n    }\n\n    throttling(path: string, throttling: ThrottlingConfig) {\n        let RateLimit = require('express-rate-limit');\n        let rateConfig = Utils.omit(throttling, \"store\", \"keyGenerator\", \"handler\");\n\n        if (this.gateway.redisClient) {\n            let store = require('./store');\n            if (this.gateway.logger.isDebugEnabled()) {\n                this.gateway.logger.debug(\"Using Redis as throttling store.\");\n            }\n            rateConfig.store = new store.RedisStore({\n                expiry: (throttling.windowMs / 1000) +1,\n                client: this.gateway.redisClient\n            });\n        }\n        \n        let limiter = new RateLimit(rateConfig);        \n\n        if (throttling.keyGenerator) {\n            let p = pathUtil.join(this.gateway.middlewarePath, 'throttling', 'keyGenerator' , throttling.keyGenerator);                \n            rateConfig.keyGenerator = require(p);\n        }\n        if (throttling.handler) {\n            let p = pathUtil.join(this.gateway.middlewarePath, 'throttling', 'handler' , throttling.handler);                \n            rateConfig.handler = require(p);\n        }\n\n        this.gateway.server.use(path, limiter);\n    }\n}\n"]}