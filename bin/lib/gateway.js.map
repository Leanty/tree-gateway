{"version":3,"sources":["../../src/lib/gateway.ts"],"names":[],"mappings":"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","file":"gateway.js","sourcesContent":["\"use strict\";\n\nimport * as http from \"http\";\nimport * as logger from \"morgan\";\nimport * as compression from \"compression\";\nimport * as express from \"express\";\nimport * as fs from \"fs-extra\";\nimport {APIService} from \"./admin/admin-server\";\nimport {Server} from \"typescript-rest\";\nimport * as StringUtils from \"underscore.string\";\nimport {ApiConfig, validateApiConfig} from \"./config/api\";\nimport {GatewayConfig, validateGatewayConfig} from \"./config/gateway\";\nimport {ApiProxy} from \"./proxy/proxy\";\nimport * as Utils from \"./proxy/utils\";\nimport {ApiRateLimit} from \"./throttling/throttling\";\nimport {ApiAuth} from \"./authentication/auth\";\nimport {Set, StringMap} from \"./es5-compat\";\nimport {Logger} from \"./logger\";\nimport * as redis from \"ioredis\";\nimport * as dbConfig from \"./redis\";\nimport * as path from \"path\";\n\nlet defaults = require('defaults');\n\nexport class Gateway {\n    private app: express.Application;\n    private adminApp: express.Application;\n    private apiProxy: ApiProxy;\n    private apiRateLimit: ApiRateLimit;\n    private apiAuth: ApiAuth;\n    private configFile: string;\n    private apiServer: http.Server;\n    private adminServer: http.Server;\n    private _apis: StringMap<ApiConfig>;\n    private _config: GatewayConfig;\n    private _logger: Logger;\n    private _redisClient: redis.Redis;\n\n    constructor(gatewayConfigFile: string) {\n        this.configFile = gatewayConfigFile;\n    }    \n    \n    get server(): express.Application {\n        return this.app;\n    }\n\n    get logger(): Logger {\n        return this._logger;\n    }\n\n    get config(): GatewayConfig {\n        return this._config;\n    }\n\n    get redisClient(): redis.Redis {\n        return this._redisClient;\n    }\n\n    get apiPath(): string {\n        return this.config.apiPath;\n    }\n\n    get middlewarePath(): string {\n        return this.config.middlewarePath;\n    }\n\n    get apis(): Array<ApiConfig> {\n        return this._apis.values();\n    }\n\n    start(ready?: (err?)=>void) {\n        this.initialize(this.configFile, (err)=>{\n            if (!err) {\n                this.apiServer = this.app.listen(this.config.listenPort, ()=>{\n                    this.logger.info('Gateway listenning on port %d', this.config.listenPort);\n                    if (ready) {\n                        ready();\n                    }\n                });\n            }\n        });  \n    }\n\n    startAdmin(ready?: ()=>void) {\n        if (this.adminApp) {\n            this.adminServer = this.adminApp.listen(this.config.adminPort, ()=>{\n                this.logger.info('Gateway Admin Server listenning on port %d', this.config.adminPort);\n                if (ready) {\n                    ready();\n                }\n            });\n        }\n        else {\n            console.error(\"You must start the Tree-Gateway before.\");\n        }\n    }\n\n    stop() {\n        if (this.apiServer) {\n            this.apiServer.close();\n            this.apiServer = null;\n        }\n    }\n\n    stopAdmin() {\n        if (this.adminServer) {\n            this.adminServer.close();\n            this.adminServer = null;\n        }\n    }\n\n    private loadApis(ready?: (err?) => void) {\n        this._apis = new StringMap<ApiConfig>();\n        let path = this.apiPath;\n        fs.readdir(path, (err, files) => {\n            if (err) {\n                this._logger.error(\"Error reading directory: \"+err);\n            }\n            else {\n                path = ((StringUtils.endsWith(path, '/'))?path:path+'/');\n                const length = files.length;\n                files.forEach((fileName, index) =>{\n                    if (StringUtils.endsWith(fileName, '.json')) {\n                        fs.readJson(path+fileName, (error, apiConfig: ApiConfig)=>{\n                            if (error) {\n                                this._logger.error(\"Error reading directory: \"+error);\n                            }\n                            else {\n                                this.loadApi(apiConfig, (length -1 === index)?ready: null);\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    }\n\n    private loadApi(api: ApiConfig, ready?: (err?) => void) {\n        validateApiConfig(api, (err, value)=>{\n            if (err) {\n                this._logger.error('Error loading api config: %s\\n%s', err.message, JSON.stringify(value));\n                if (ready) {\n                    ready(err);\n                }\n            }\n            else {\n                this.loadValidateApi(api, ready);\n            }\n        });\n    }\n\n    private loadValidateApi(api: ApiConfig, ready?: (err?) => void) {\n        if (this._logger.isInfoEnabled()) {\n            this._logger.info(\"Configuring API [%s] on path: %s\", api.name, api.proxy.path);\n        }\n        let apiKey: string = this.getApiKey(api);\n        this._apis.set(apiKey, api);\n        api.proxy.path = Utils.normalizePath(api.proxy.path);\n        \n        if (api.throttling) {\n            if (this._logger.isDebugEnabled()) {\n                this._logger.debug(\"Configuring API Rate Limits\");\n            }\n            this.apiRateLimit.throttling(api.proxy.path, api.throttling);\n        }\n        if (api.authentication) {\n            if (this._logger.isDebugEnabled()) {\n                this._logger.debug(\"Configuring API Authentication\");\n            }\n            this.apiAuth.authentication(apiKey, api.proxy.path, api.authentication);\n        }\n        if (this._logger.isDebugEnabled()) {\n            this._logger.debug(\"Configuring API Proxy\");\n        }\n        this.apiProxy.proxy(api);\n        \n        if (ready) {\n            ready();\n        }\n    }\n\n    private initialize(configFileName: string, ready?: (err?)=>void) {\n        if (StringUtils.startsWith(configFileName, '.')) {\n            configFileName = path.join(process.cwd(), configFileName);                \n        }\n        \n        fs.readJson(configFileName, (error, gatewayConfig: GatewayConfig)=>{\n            if (error) {\n                console.error(\"Error reading tree-gateway.json config file: \"+error);\n            }\n            else {\n                this.app = express();\n                validateGatewayConfig(gatewayConfig, (err, value)=>{\n                    if (err) {\n                        console.error('Error loading api config: %s\\n%s', err.message, JSON.stringify(value));\n                        if (ready) {\n                            ready(err);\n                        }\n                    }\n                    else {\n                        this.initializeConfig(configFileName, gatewayConfig);\n                        this._logger = new Logger(this.config.logger, this);\n                        if (this.config.database) {\n                            this._redisClient = dbConfig.initializeRedis(this.config.database);\n                        }\n                        this.apiProxy = new ApiProxy(this);\n                        this.apiRateLimit = new ApiRateLimit(this);\n                        this.apiAuth = new ApiAuth(this);\n\n                        this.configureServer(ready);\n                        this.configureAdminServer();\n                    }\n                });\n            }\n        });\n    }\n\n    private initializeConfig(configFileName: string, gatewayConfig: GatewayConfig) {\n        this._config = defaults(gatewayConfig, {\n            rootPath : path.dirname(configFileName),\n        });\n        if (StringUtils.startsWith(this._config.rootPath, '.')) {\n            this._config.rootPath = path.join(path.dirname(configFileName), this._config.rootPath);\n        }\n\n        this._config = defaults(this._config, {\n            apiPath : path.join(this._config.rootPath, 'apis'),\n            middlewarePath : path.join(this._config.rootPath, 'middleware')\n        });\n\n        if (StringUtils.startsWith(this._config.apiPath, '.')) {\n            this._config.apiPath = path.join(this._config.rootPath, this._config.apiPath);                \n        }\n        if (StringUtils.startsWith(this._config.middlewarePath, '.')) {\n            this._config.middlewarePath = path.join(this._config.rootPath, this._config.middlewarePath);                \n        }\n    }\n\n    private configureServer(ready: (err?)=>void) {\n        this.app.disable('x-powered-by'); \n        this.app.use(compression());\n        if (this.config.underProxy) {\n            this.app.enable('trust proxy'); \n        }\n        if (this.app.get('env') == 'production') {\n            // const accessLogStream = fs.createWriteStream(path.join(Parameters.rootDir, 'logs/access_errors.log'),{flags: 'a'});\n            // gateway.server.use(logger('common', {\n            //   skip: function(req: express.Request, res: express.Response) { \n            //       return res.statusCode < 400 \n            //   }, \n            //   stream: accessLogStream }));\n        } \n        else {\n            this.app.use(logger('dev'));\n        }\n        this.loadApis(ready);\n    }\n\n    private configureAdminServer() {\n        this.adminApp = express();\n        this.adminApp.disable('x-powered-by'); \n        this.adminApp.use(compression());\n        this.adminApp.use(logger('dev'));\n        \n        APIService.gateway = this;\n        Server.buildServices(this.adminApp, APIService);\n    }\n\n    private getApiKey(api: ApiConfig) {\n        return api.name + (api.version? '_'+api.version: '_default');\n    }\n}\n/*TODO: \n  - Global interceptors / Filters / Throttling\n- Create a global interceptor to add a 'Via' header pointing to Tree-Gateway\n- Manage API versions\n- Create a clsuter program, to initialize the app in cluster\n*/"]}