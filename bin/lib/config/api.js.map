{"version":3,"sources":["../../src/lib/config/api.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,+BAAkE,kBAAkB,CAAC,CAAA;AACrF,2BAAgE,cAAc,CAAC,CAAA;AAC/E,sBAA0C,SAAS,CAAC,CAAA;AACpD,iCAA4E,oBAAoB,CAAC,CAAA;AACjG,IAAY,GAAG,WAAM,KAAK,CAAC,CAAA;AAmChB,gCAAwB,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;IACpD,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvD,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,QAAQ,EAAE;IACjE,KAAK,EAAE,4BAAoB,CAAC,QAAQ,EAAE;IACtC,WAAW,EAAE,GAAG,CAAC,MAAM,EAAE;IACzB,UAAU,EAAE,4CAA+B;IAC3C,cAAc,EAAE,8CAA6B;IAC7C,gBAAgB,EAAE,wDAAqC;CAC1D,CAAC,CAAC;AAEH,2BAAkC,SAAoB,EAAE,QAA4B;IAChF,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,gCAAwB,EAAE,QAAQ,CAAC,CAAC;AAChE,CAAC;AAFe,yBAAiB,oBAEhC,CAAA","file":"api.js","sourcesContent":["\"use strict\";\n\nimport {AuthenticationConfig, AuthenticationValidatorSchema} from \"./authentication\";\nimport {ThrottlingConfig, ThrottlingConfigValidatorSchema} from \"./throttling\";\nimport {Proxy, ProxyValidatorSchema} from \"./proxy\";\nimport {ServiceDiscoveryConfig, ServiceDiscoveryConfigValidatorSchema} from \"./serviceDiscovery\";\nimport * as Joi from \"joi\";\n\n/**\n * The API config descriptor.\n */\nexport interface ApiConfig {\n    /**\n     * The API name. Used to identify the API on admin console. \n     */\n    name: string;\n    /**\n     * The API version. More than one version can be published for the same API.\n     */\n    version: string;\n    /**\n     * Configuration for the API proxy engine.\n     */\n    proxy: Proxy;\n    /**\n     * An optional description for API. \n     */\n    description?: string;\n    /**\n     * Configuration for the rate limit engine.\n     */\n    throttling?: ThrottlingConfig;\n\n    /**\n     * Configuration for API authentication.\n     */\n    authentication?: AuthenticationConfig;\n\n    serviceDiscovery?: ServiceDiscoveryConfig;\n}\n\nexport let ApiConfigValidatorSchema = Joi.object().keys({\n    name: Joi.string().alphanum().min(3).max(30).required(),\n    version: Joi.string().regex(/^(\\d+\\.)?(\\d+\\.)?(\\d+)$/).required(),\n    proxy: ProxyValidatorSchema.required(),\n    description: Joi.string(),\n    throttling: ThrottlingConfigValidatorSchema,\n    authentication: AuthenticationValidatorSchema, \n    serviceDiscovery: ServiceDiscoveryConfigValidatorSchema\n});\n\nexport function validateApiConfig(apiConfig: ApiConfig, callback: (err, value)=>void) {\n    Joi.validate(apiConfig, ApiConfigValidatorSchema, callback);\n}"]}