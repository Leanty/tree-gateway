{"version":3,"sources":["../../src/lib/settings.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;AAEb,IAAY,OAAO,WAAM,SAAS,CAAC,CAAA;AACnC,+BAA2D,gBAAgB,CAAC,CAAA;AAC5E,IAAY,KAAK,WAAM,SAAS,CAAC,CAAA;AAEjC,IAAM,QAAQ,GAAa;IACzB,GAAG,EAAE;QACD,IAAM,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QAC1C,QAAQ,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;QACzB,QAAQ,CAAC,WAAW,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACpD,QAAQ,CAAC,OAAO,GAAG,CAAC,SAAS,GAAE,OAAO,CAAC,CAAC;QACxC,QAAQ,CAAC,cAAc,GAAG,CAAC,SAAS,GAAE,aAAa,CAAC,CAAC;QAErD,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;CACF,CAAC;AAKF;IAAA;IAKA,CAAC;IARD;QAAC,0BAAS;QACT,uBAAM,CAAC,sBAAK,CAAC,SAAS,CAAC;QACvB,yBAAQ,CAAC,QAAQ,CAAC;;gBAAA;IAMnB,eAAC;AAAD,CALA,AAKC,IAAA;AALY,gBAAQ,WAKpB,CAAA","file":"settings.js","sourcesContent":["\"use strict\";\n\nimport * as express from \"express\";\nimport {Scope, Scoped, Provided, Provider, AutoWired} from \"typescript-ioc\";\nimport * as redis from \"ioredis\";\n\nconst provider: Provider = { \n  get: () => {\n      const settings: Settings = new Settings();\n      settings.app = express();\n      settings.redisClient = new redis(6379, 'localhost');\n      settings.apiPath = (__dirname +'/apis');\n      settings.middlewarePath = (__dirname +'/middleware');\n\n      return settings; \n  }\n};\n\n@AutoWired\n@Scoped(Scope.Singleton)\n@Provided(provider)\nexport class Settings {\n    app: express.Application;\n    redisClient: redis.Redis;\n    apiPath: string;\n    middlewarePath: string;\n}\n"]}