{"version":3,"sources":["../../src/lib/throttling/throttling.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;AAIb,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AACpC,+BAAgC,gBAAgB,CAAC,CAAA;AACjD,yBAAuB,aAAa,CAAC,CAAA;AACrC,IAAY,QAAQ,WAAM,MAAM,CAAC,CAAA;AAGjC;IAAA;IA8BA,CAAC;IA1BG,iCAAU,GAAV,UAAW,IAAY,EAAE,UAA6B;QAClD,IAAI,SAAS,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC9C,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;QAE5E,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;YAC5B,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;YAC/D,UAAU,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC;gBACpC,MAAM,EAAE,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAE,CAAC;gBACvC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;aACpC,CAAC,CAAC;QACP,CAAC;QAED,IAAI,OAAO,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,CAAC;QAExC,EAAE,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,YAAY,EAAE,cAAc,EAAG,UAAU,CAAC,YAAY,CAAC,CAAC;YAC5G,UAAU,CAAC,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC;QACD,EAAE,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,YAAY,EAAE,SAAS,EAAG,UAAU,CAAC,OAAO,CAAC,CAAC;YAClG,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IA5BD;QAAC,uBAAM;;kDAAA;IAFX;QAAC,0BAAS;;oBAAA;IA+BV,mBAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,oBAAY,eA8BxB,CAAA","file":"throttling.js","sourcesContent":["\"use strict\";\n\nimport * as express from \"express\";\nimport * as config from \"../config\";\nimport * as Utils from \"underscore\";\nimport {AutoWired, Inject} from \"typescript-ioc\";\nimport {Settings} from \"../settings\";\nimport * as pathUtil from \"path\"; \n\n@AutoWired\nexport class ApiRateLimit {\n    @Inject\n    private settings: Settings;\n\n    throttling(path: string, throttling: config.Throttling) {\n        let RateLimit = require('express-rate-limit');\n        let rateConfig = Utils.omit(throttling, \"store\", \"keyGenerator\", \"handler\");\n\n        if (this.settings.redisClient) {\n            let store = require('./store');\n            this.settings.logger.debug(\"Using Redis as throttling store.\");\n            rateConfig.store = new store.RedisStore({\n                expiry: (throttling.windowMs / 1000) +1,\n                client: this.settings.redisClient\n            });\n        }\n        \n        let limiter = new RateLimit(rateConfig);        \n\n        if (throttling.keyGenerator) {\n            let p = pathUtil.join(this.settings.middlewarePath, 'throttling', 'keyGenerator' , throttling.keyGenerator);                \n            rateConfig.keyGenerator = require(p);\n        }\n        if (throttling.handler) {\n            let p = pathUtil.join(this.settings.middlewarePath, 'throttling', 'handler' , throttling.handler);                \n            rateConfig.handler = require(p);\n        }\n\n        this.settings.app.use(path, limiter);\n    }\n}\n"]}