{"version":3,"sources":["../../src/lib/proxy/filter.ts"],"names":[],"mappings":"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","file":"filter.js","sourcesContent":["\"use strict\";\n\nimport * as StringUtils from \"underscore.string\";\nimport * as config from \"../config\";\nimport * as Utils from \"./utils\";\nimport {AutoWired, Inject} from \"typescript-ioc\";\nimport {Settings} from \"../settings\";\nimport * as path from \"path\"; \n\nlet pathToRegexp = require('path-to-regexp');\n \n@AutoWired\nexport class ProxyFilter {\n    @Inject\n    private settings: Settings;\n    buildFilters(proxy: config.Proxy) {\n        let filterChain = new Array<Function>();\n        if (this.hasMethodFilter(proxy)) {\n            filterChain.push(this.buildMethodFilter(proxy));\n        }\n        if (this.hasPathFilter(proxy)) {\n          filterChain.push(this.buildPathFilter(proxy));\n        }\n        if (this.hasCustomFilter(proxy)) {\n          filterChain.push(this.buildCustomFilter(proxy));\n        }\n        return filterChain;\n    }\n\n    private buildCustomFilter(proxy: config.Proxy) {\n        let func = new Array<string>();\n        func.push(\"function(req, res){\");\n        func.push(\"var accepted = true;\");\n        func.push(\"accepted = (\");\n        proxy.filter.forEach((filter, index)=>{\n            if (index > 0) {\n                func.push(\"&&\");                \n            }\n            func.push(\"(\");                \n            if (filter.appliesTo) {\n                func.push(\"!(\");                \n                filter.appliesTo.forEach((path,index)=>{\n                    if (index > 0) {\n                        func.push(\"||\");                \n                    }                \n                    func.push(\"(pathToRegexp('\"+Utils.normalizePath(path)+\"').test(req.path))\");\n\n                });\n                func.push(\") ? accepted :\");                \n            }\n            let p = path.join(this.settings.middlewarePath, 'filter' ,filter.name);                \n            func.push(\"require('\"+p+\"')(req, res)\");\n            func.push(\")\");                \n        });\n        func.push(\");\");\n        func.push(\"return accepted;\");\n        func.push(\"}\");\n        let f;\n        eval('f = '+func.join('\\n'))\n        return f;\n    }\n\n    private buildPathFilter(proxy: config.Proxy) {\n        let func = new Array<string>();\n        func.push(\"function(req, res){\");\n        func.push(\"var accepted = true;\");\n        func.push(\"var targetPath = req.path;\");\n        if (proxy.target.allowPath && proxy.target.allowPath.length > 0) {\n            func.push(\"accepted = (\");\n            proxy.target.allowPath.forEach((path, index)=>{\n                if (index > 0) {\n                    func.push(\"||\");                \n                }                \n                func.push(\"(pathToRegexp('\"+Utils.normalizePath(path)+\"').test(targetPath))\");\n            });\n            func.push(\");\");\n        }\n        if (proxy.target.denyPath && proxy.target.denyPath.length > 0) {\n            func.push(\"accepted = accepted && (\");\n            proxy.target.denyPath.forEach((path, index)=>{\n                if (index > 0) {\n                    func.push(\"&&\");                \n                }\n                func.push(\"!(pathToRegexp('\"+Utils.normalizePath(path)+\"').test(targetPath))\");\n            });\n            func.push(\");\");\n        }\n        func.push(\"return accepted;\");\n        func.push(\"}\");\n        let f;\n        eval('f = '+func.join(''))\n        return f;\n    }\n\n    private buildMethodFilter(proxy: config.Proxy) {\n        let body = new Array<string>();\n        body.push(\"var accepted = true;\");\n        if (proxy.target.allowMethod && proxy.target.allowMethod.length > 0) {\n            body.push(\"accepted = (\");\n            proxy.target.allowMethod.forEach((method, index)=>{\n                if (index > 0) {\n                    body.push(\"||\");                \n                }\n                body.push(\"(req.method === '\"+method.toUpperCase()+\"')\")\n            });\n            body.push(\");\");\n        }\n        if (proxy.target.denyMethod && proxy.target.denyMethod.length > 0) {\n            body.push(\"accepted = accepted && (\");\n            proxy.target.denyMethod.forEach((method, index) => {\n                if (index > 0) {\n                    body.push(\"&&\");                \n                }\n                body.push(\"(req.method !== '\"+method.toUpperCase()+\"')\")\n            });\n            body.push(\");\");\n        }\n        body.push(\"if (!accepted){ res.status(405);}\");\n        body.push(\"return accepted;\");\n        return Function(\"req\", \"res\", body.join(''));\n    }\n\n    private hasCustomFilter(proxy: config.Proxy) {\n        return (proxy.filter && proxy.filter.length > 0);\n    }\n\n    private hasPathFilter(proxy: config.Proxy) {\n        return (proxy.target.allowPath && proxy.target.allowPath.length > 0)\n            || (proxy.target.denyPath && proxy.target.denyPath.length > 0);\n    }\n\n    private hasMethodFilter(proxy: config.Proxy) {\n        return (proxy.target.allowMethod && proxy.target.allowMethod.length > 0)\n            || (proxy.target.denyMethod && proxy.target.denyMethod.length > 0);\n    }\n}  "]}